name: CI Workflow

on: 
  push:
    branches:
      - '**'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      node-version: 20
    steps:
      - uses: actions/checkout@v4
      - name: Set working directory
        run: echo "::set-output name=working-directory::my-app"
      - name: Use Node.js 20
        id: node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.node.outputs.node-version }}
      - name: Install dependencies
        run: npm ci
        working-directory: ${{ steps.set-working-directory.outputs.working-directory }}

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Set working directory
        run: echo "::set-output name=working-directory::my-app"
      - name: Lint check
        run: npm run lint --fix-dry-run .
        working-directory: ${{ steps.set-working-directory.outputs.working-directory }}

  test-jest:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Set working directory
        run: echo "::set-output name=working-directory::my-app"
      - name: Run Next.js tests
        run: npm run test
        working-directory: ${{ steps.set-working-directory.outputs.working-directory }}

  test-storybook:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Set working directory
        run: echo "::set-output name=working-directory::my-app"
      - name: Install Playwright
        run: npx playwright install --with-deps
        working-directory: ${{ steps.set-working-directory.outputs.working-directory }}
      - name: Start Storybook
        run: npm run storybook -- --ci --port 6006 &
        working-directory: ${{ steps.set-working-directory.outputs.working-directory }}
      - name: Wait for Storybook
        run: npx wait-on http://localhost:6006
        working-directory: ${{ steps.set-working-directory.outputs.working-directory }}
      - name: Run Storybook tests
        run: npm run test:storybook
        working-directory: ${{ steps.set-working-directory.outputs.working-directory }}
      - name: Stop Storybook
        run: kill $(lsof -t -i:6006)
        working-directory: ${{ steps.set-working-directory.outputs.working-directory }}

  build:
    runs-on: ubuntu-latest
    needs: [setup, lint, test-jest, test-storybook]
    steps:
      - name: Set working directory
        run: echo "::set-output name=working-directory::my-app"
      - name: Build project
        run: npm run build
        working-directory: ${{ steps.set-working-directory.outputs.working-directory }}